/****************************************************************************
**
** Copyright (C) 2021 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of Qt for Python.
**
** $QT_BEGIN_LICENSE:COMM$
**
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** $QT_END_LICENSE$
**
****************************************************************************/

// Make "signals:", "slots:" visible as access specifiers
#define QT_ANNOTATE_ACCESS_SPECIFIER(a) __attribute__((annotate(#a)))

// Q_PROPERTY is defined as class annotation which does not work since a
// sequence of properties will to expand to a sequence of annotations
// annotating nothing, causing clang to complain. Instead, define it away in a
// static assert with the stringified argument in a ','-operator (cf qdoc).

#define QT_ANNOTATE_CLASS(type,...) static_assert(sizeof(#__VA_ARGS__),#type);

#include <QtCore/qnamespace.h>

#if @ENABLE_X11@
  #define Q_OS_X11
#elif @ENABLE_MAC@
  #define Q_OS_MAC
#elif @ENABLE_WIN@
  #define Q_OS_WIN
#endif

// There are symbols in Qt that exist in Debug but
// not in release
#define QT_NO_DEBUG

// Here are now all configured modules appended:
